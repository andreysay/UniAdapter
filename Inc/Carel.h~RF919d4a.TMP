/**
  ******************************************************************************
  * File Name          : Carel.h
  * Description        : This file contains the defines of the threads for Carel controllers
  ******************************************************************************
  */
/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __CAREL_H
#define __CAREL_H

/* Private define ------------------------------------------------------------*/
typedef struct two_indexes {
	uint32_t carel_idx;
	uint32_t modbus_idx;
} carel_modbus_idx;

//***********CarelScan***************
// returns none
// Inputs: none
// Outputs: none
// Initialize connected controller address scan by setup Carel protocol scan message and 
// signal CarelPortTxInit() to transmit it to connected controller, if responce will received, controller address was found,
// thread will blocked, MU port reception thread will signaled otherwise will prepare new scan message every 200ms.
void CarelScan(void);
//***********CarelPortTxInit***************
// returns none
// Inputs: none
// Outputs: none
// Initialize controller port for transmission, index variable, pointer to buffer and transmission buffer.
void CarelPortTxInit(void);
//***********CarelPortSendMsg***************
// returns none
// Inputs: none
// Outputs: none
// Send Modbus message to connected controller through USART1,
void CarelPortSendMsg(void);
//***********CarelPortRxInit***************
// returns none
// Inputs: none
// Outputs: none
// Initialize index variable, buffer pointer, USART1 interrupts
// signal CtrlPortHandleContinuousReception() for reception
void CarelPortRxInit(void);
//***********CarelPortReception***************
// returns none
// Inputs: none
// Outputs: none
// Waiting for data reception from USART1, will signal by USART1 ISR from USART1_IDLE_Callback()
void CarelPortReception(void);
//***********CarelHndlReceived***************
// returns none
// Inputs: none
// Outputs: none
// Handle message by Carel protocol
void CarelHndlReceived(void);
//***********CarelSend***************
// returns none
// Inputs: none
// Outputs: none
// Convert message from Modbus to Carel
void CarelSend(void);





#endif /* __CAREL_H */
/************************ (C) COPYRIGHT *****END OF FILE****/
